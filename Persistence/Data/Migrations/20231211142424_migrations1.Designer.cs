// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Data;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(contextSeguridad))]
    [Migration("20231211142424_migrations1")]
    partial class migrations1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("NombreCargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreCargo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("cargo", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateOnly>("DateReg")
                        .HasColumnType("date")
                        .HasColumnName("dateReg");

                    b.Property<string>("IdCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("idCliente");

                    b.Property<int>("IdDireccionFk")
                        .HasColumnType("int")
                        .HasColumnName("IdDireccionFK");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("NroContacto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nroContacto");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDireccionFk" }, "IdDireccionFK");

                    b.HasIndex(new[] { "IdMunicipioFk" }, "IdMunicipioFk");

                    b.HasIndex(new[] { "IdCliente" }, "idCliente")
                        .IsUnique();

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateOnly>("FechContrato")
                        .HasColumnType("date")
                        .HasColumnName("fechContrato");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date")
                        .HasColumnName("fechaFin");

                    b.Property<int>("IdClienteFk")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleadoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoFk")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdClienteFk" }, "IdClienteFk");

                    b.HasIndex(new[] { "IdEmpleadoFk" }, "IdEmpleadoFk");

                    b.HasIndex(new[] { "IdEstadoFk" }, "IdEstadoFk");

                    b.ToTable("contrato", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("IdPaisFk")
                        .HasColumnType("int")
                        .HasColumnName("idPaisFk");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPaisFk" }, "idPaisFk");

                    b.ToTable("departamento", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.DireccionCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Bis")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bis");

                    b.Property<string>("CardinalPrimario")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("cardinalPrimario");

                    b.Property<string>("CardinalSecundario")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cardinalSecundario");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("complemento");

                    b.Property<int>("IdClienteFk")
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipiofk")
                        .HasColumnType("int");

                    b.Property<string>("LetraPrincipal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("letraPrincipal");

                    b.Property<string>("LetraSecundaria")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("letraSecundaria");

                    b.Property<int>("NumeroPrincipal")
                        .HasColumnType("int")
                        .HasColumnName("numeroPrincipal");

                    b.Property<int>("NumeroSecundario")
                        .HasColumnType("int")
                        .HasColumnName("numeroSecundario");

                    b.Property<string>("TipoVia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipoVia");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("direccioncliente", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.DireccionEmpleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Bis")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bis");

                    b.Property<string>("CardinalPrimario")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("cardinalPrimario");

                    b.Property<string>("CardinalSecundario")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cardinalSecundario");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("complemento");

                    b.Property<int>("IdEmpleadoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipiofk")
                        .HasColumnType("int");

                    b.Property<string>("LetraPrincipal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("letraPrincipal");

                    b.Property<string>("LetraSecundaria")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("letraSecundaria");

                    b.Property<int>("NumeroPrincipal")
                        .HasColumnType("int")
                        .HasColumnName("numeroPrincipal");

                    b.Property<int>("NumeroSecundario")
                        .HasColumnType("int")
                        .HasColumnName("numeroSecundario");

                    b.Property<string>("TipoVia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipoVia");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("direccionempleado", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateOnly>("DateReg")
                        .HasColumnType("date")
                        .HasColumnName("dateReg");

                    b.Property<int>("IdCargoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdDireccionFk")
                        .HasColumnType("int")
                        .HasColumnName("IdDireccionFK");

                    b.Property<string>("IdEmpleado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("idEmpleado");

                    b.Property<int>("IdMunicipioFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("NroContacto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nroContacto");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCargoFk" }, "IdCargoFk");

                    b.HasIndex(new[] { "IdDireccionFk" }, "IdDireccionFK")
                        .HasDatabaseName("IdDireccionFK1");

                    b.HasIndex(new[] { "IdMunicipioFk" }, "IdMunicipioFk")
                        .HasDatabaseName("IdMunicipioFk1");

                    b.HasIndex(new[] { "IdEmpleado" }, "idEmpleado")
                        .IsUnique();

                    b.ToTable("empleado", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("estado", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("IdDepartamentoFk")
                        .HasColumnType("int")
                        .HasColumnName("idDepartamentoFk");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDepartamentoFk" }, "idDepartamentoFk");

                    b.ToTable("municipio", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("pais", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Programacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("IdContratoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleadoFk")
                        .HasColumnType("int");

                    b.Property<int>("IdTurnoFk")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdContratoFk" }, "IdContratoFk");

                    b.HasIndex(new[] { "IdEmpleadoFk" }, "IdEmpleadoFk")
                        .HasDatabaseName("IdEmpleadoFk1");

                    b.HasIndex(new[] { "IdTurnoFk" }, "IdTurnoFk");

                    b.ToTable("programacion", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<TimeOnly>("HorTurnoF")
                        .HasColumnType("time")
                        .HasColumnName("horTurnoF");

                    b.Property<TimeOnly>("HorTurnoI")
                        .HasColumnType("time")
                        .HasColumnName("horTurnoI");

                    b.Property<string>("NombreTurno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreTurno");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("turnos", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.HasOne("Domain.Entities.DireccionCliente", "IdDireccionFkNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdDireccionFk")
                        .IsRequired()
                        .HasConstraintName("cliente_ibfk_2");

                    b.HasOne("Domain.Entities.Municipio", "IdMunicipioFkNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdMunicipioFk")
                        .IsRequired()
                        .HasConstraintName("cliente_ibfk_1");

                    b.Navigation("IdDireccionFkNavigation");

                    b.Navigation("IdMunicipioFkNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Contrato", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "IdClienteFkNavigation")
                        .WithMany("Contratos")
                        .HasForeignKey("IdClienteFk")
                        .IsRequired()
                        .HasConstraintName("contrato_ibfk_3");

                    b.HasOne("Domain.Entities.Empleado", "IdEmpleadoFkNavigation")
                        .WithMany("Contratos")
                        .HasForeignKey("IdEmpleadoFk")
                        .IsRequired()
                        .HasConstraintName("contrato_ibfk_2");

                    b.HasOne("Domain.Entities.Estado", "IdEstadoFkNavigation")
                        .WithMany("Contratos")
                        .HasForeignKey("IdEstadoFk")
                        .IsRequired()
                        .HasConstraintName("contrato_ibfk_1");

                    b.Navigation("IdClienteFkNavigation");

                    b.Navigation("IdEmpleadoFkNavigation");

                    b.Navigation("IdEstadoFkNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.HasOne("Domain.Entities.Pais", "IdPaisFkNavigation")
                        .WithMany("Departamentos")
                        .HasForeignKey("IdPaisFk")
                        .IsRequired()
                        .HasConstraintName("departamento_ibfk_1");

                    b.Navigation("IdPaisFkNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Empleado", b =>
                {
                    b.HasOne("Domain.Entities.Cargo", "IdCargoFkNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdCargoFk")
                        .IsRequired()
                        .HasConstraintName("empleado_ibfk_1");

                    b.HasOne("Domain.Entities.DireccionEmpleado", "IdDireccionFkNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdDireccionFk")
                        .IsRequired()
                        .HasConstraintName("empleado_ibfk_3");

                    b.HasOne("Domain.Entities.Municipio", "IdMunicipioFkNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdMunicipioFk")
                        .IsRequired()
                        .HasConstraintName("empleado_ibfk_2");

                    b.Navigation("IdCargoFkNavigation");

                    b.Navigation("IdDireccionFkNavigation");

                    b.Navigation("IdMunicipioFkNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Municipio", b =>
                {
                    b.HasOne("Domain.Entities.Departamento", "IdDepartamentoFkNavigation")
                        .WithMany("Municipios")
                        .HasForeignKey("IdDepartamentoFk")
                        .IsRequired()
                        .HasConstraintName("municipio_ibfk_1");

                    b.Navigation("IdDepartamentoFkNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Programacion", b =>
                {
                    b.HasOne("Domain.Entities.Contrato", "IdContratoFkNavigation")
                        .WithMany("Programacions")
                        .HasForeignKey("IdContratoFk")
                        .IsRequired()
                        .HasConstraintName("programacion_ibfk_2");

                    b.HasOne("Domain.Entities.Empleado", "IdEmpleadoFkNavigation")
                        .WithMany("Programacions")
                        .HasForeignKey("IdEmpleadoFk")
                        .IsRequired()
                        .HasConstraintName("programacion_ibfk_1");

                    b.HasOne("Domain.Entities.Turno", "IdTurnoFkNavigation")
                        .WithMany("Programacions")
                        .HasForeignKey("IdTurnoFk")
                        .IsRequired()
                        .HasConstraintName("programacion_ibfk_3");

                    b.Navigation("IdContratoFkNavigation");

                    b.Navigation("IdEmpleadoFkNavigation");

                    b.Navigation("IdTurnoFkNavigation");
                });

            modelBuilder.Entity("Domain.Entities.Cargo", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("Domain.Entities.Contrato", b =>
                {
                    b.Navigation("Programacions");
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("Domain.Entities.DireccionCliente", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("Domain.Entities.DireccionEmpleado", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Domain.Entities.Empleado", b =>
                {
                    b.Navigation("Contratos");

                    b.Navigation("Programacions");
                });

            modelBuilder.Entity("Domain.Entities.Estado", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("Domain.Entities.Municipio", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Domain.Entities.Pais", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("Domain.Entities.Turno", b =>
                {
                    b.Navigation("Programacions");
                });
#pragma warning restore 612, 618
        }
    }
}
